getBuiltin(builtin) := (
    getInteger(term) := (
        isInteger(term) ? getData(term)
        syntaxError("expected integer argument to", builtin)
    )

    compute(f, left, right) :=
        f(getInteger(getTerm(left)), getInteger(getTerm(right)))

    makeIntegerBuiltin(f, newType, left, right) :=
        newClosure(newType(getTag(builtin), f.compute(left, right)), [])

    builtins := [
        ("+", (2, makeIntegerBuiltin((+), newInteger))),
        ("-", (2, makeIntegerBuiltin((-), newInteger))),
        ("*", (2, makeIntegerBuiltin((*), newInteger))),
        ("/", (2, makeIntegerBuiltin((/), newInteger))),
        ("%", (2, makeIntegerBuiltin((%), newInteger))),
        ("=", (2, makeIntegerBuiltin((=), newBoolean))),
        ("!=", (2, makeIntegerBuiltin((!=), newBoolean))),
        ("<", (2, makeIntegerBuiltin((<), newBoolean))),
        (">", (2, makeIntegerBuiltin((>), newBoolean))),
        ("<=", (2, makeIntegerBuiltin((<=), newBoolean))),
        (">=", (2, makeIntegerBuiltin((>=), newBoolean)))
    ]
    builtins.lookup(getLexeme(getTag(builtin)))
)
