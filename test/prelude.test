===============================================================================
if false (x -> x) (y -> y)
(y -> y)
===============================================================================
tail((x -> x) :: y -> y)
(y -> y)
===============================================================================
head(((x -> x) :: y -> y) :: z -> z)
($x -> (($x (x -> x)) (y -> y)))
===============================================================================
primes @ 25
101
===============================================================================
(squares | even) @ 10
400
===============================================================================
sum(take(5, squares))
30
===============================================================================
head(drop(5, squares))
25
===============================================================================
all((> 0), drop(1, take(20, squares)))
(x -> (y -> x))
===============================================================================
reverse(take(5, squares)) @ 4
0
===============================================================================
product(take(3, drop(1, squares)))
36
===============================================================================
squares |> take(7) |> reverse |> drop(2) |> head
16
===============================================================================
head <> drop(2) <> reverse <> take(7) <| squares
16
===============================================================================
49 `in` (squares | odd)
(x -> (y -> x))
===============================================================================
(* 2) <:> squares |> take(4) |> sum
28
===============================================================================
sum(take(10, naturals))
45
===============================================================================
sum(take(10, naturals | odd))
100
===============================================================================
head(sort(5 :: 60 :: 7 :: 14 :: 2 :: 5 :: 33 :: nil))
2
===============================================================================
head(5 :: (10 :: (15 :: (20 :: nil))) | (> 10))
15
===============================================================================
factorial(10)
3628800
===============================================================================
head(replicate(7, 10))
10
===============================================================================
main(input) = showIntegerList(((2 + 1) *) <:> take(5, naturals)) \n main
[0, 3, 6, 9, 12]
===============================================================================
main(input) = showIntegerList((* (2 + 1)) <:> take(5, naturals)) \n main
[0, 3, 6, 9, 12]
===============================================================================
main(input) = showIntegerList((2 * 2 +) <:> take(5, naturals)) \n main
[4, 5, 6, 7, 8]
===============================================================================
main(input) = showIntegerList((+ 2 * 2) <:> take(5, naturals)) \n main
[4, 5, 6, 7, 8]
===============================================================================
===============================================================================
main(input) = showInteger(123) \n main
123
===============================================================================
main(input) = showInteger(-123) \n main
-123
===============================================================================
main(input) = intersperse(head(","), "abcdef") \n main
a,b,c,d,e,f
===============================================================================
main(input) = showIntegerList(5 ~ 9) \n main
[5, 6, 7, 8, 9]
===============================================================================
main(input) = showIntegerList(take(10, primes)) \n main
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
===============================================================================
main(input) = showIntegerList(negate <:> take(5, primes)) \n main
[-2, -3, -5, -7, -11]
===============================================================================
"abcd" === head("a") ~ head("d")
(x -> (y -> x))
===============================================================================
maximum(take(7, squares) | odd)
25
===============================================================================
maybe(-1, id, find(even, "aceswild"))
108
===============================================================================
maybe(-1, id, find(even, "aces"))
-1
===============================================================================
main(input) = union("abc", "bbd") \n main
abcd
===============================================================================
main(input) = intersect("abbc", "bbcd") \n main
bbc
===============================================================================
main(input) = nub("acbbcda") \n main
acbd
===============================================================================
fromJust(just(10))
10
===============================================================================
fromJust(nothing)
Integer arithmetic error: divide by zero
===============================================================================
isJust(just(1))
(x -> (y -> x))
===============================================================================
isJust(nothing)
(x -> (y -> y))
===============================================================================
isNothing(nothing)
(x -> (y -> x))
===============================================================================
isNothing(just(10))
(x -> (y -> y))
===============================================================================
maybe(-1, id, lookup(7, zip(naturals, take(10, primes))))
19
===============================================================================
